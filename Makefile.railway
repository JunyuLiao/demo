# Railway-compatible Makefile
# Detects system and uses appropriate compiler and paths

# Detect OS and set appropriate paths
UNAME_S := $(shell uname -s)
ifeq ($(UNAME_S),Linux)
    # Linux (Railway)
    INCLUDE_PATH = /usr/include
    LIBRARY_PATH = /usr/lib
    CXX = g++
else
    # macOS (local development)
    INCLUDE_PATH = /opt/local/include
    LIBRARY_PATH = /opt/local/lib
    CXX = clang++
endif

# Compiler flags
CXXFLAGS = -w -I$(INCLUDE_PATH)
CXXFLAGS += --std=c++17 -Wall -Werror -pedantic -g
LDFLAGS = -L$(LIBRARY_PATH) -lglpk -lm

# Target executables
TARGET = run
WEB_TARGET = run_web

# Build web version (real interactive)
web-real:
	$(CXX) $(CXXFLAGS) main_web_real.cpp highdim.cpp attribute_subset.cpp util_web.cpp other/*.c other/*.cpp $(LDFLAGS) -Ofast -o $(WEB_TARGET)

# Build main version
all:
	$(CXX) $(CXXFLAGS) main.cpp highdim.cpp attribute_subset.cpp other/*.c other/*.cpp $(LDFLAGS) -Ofast -o $(TARGET)

# Clean
clean:
	rm -f $(TARGET) $(WEB_TARGET)

.PHONY: all web-real clean
